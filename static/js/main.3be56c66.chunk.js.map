{"version":3,"sources":["App.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","Calculator","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","match","className","Formula","Output","currentValue","Buttons","decimal","evaluate","numbers","operators","href","React","Component","id","onClick","style","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3be56c66.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.scss';\r\n\r\n\r\nconst isOperator = /[x/+-]/,\r\n    endsWithOperator = /[x+-/]$/,\r\n    endsWithNegativeSign = /[x/+]=$/,\r\n    clearStyle = { background: \"#ac3939\" },\r\n    operatorStyle = { background: \"#666666\" },\r\n    equalsStyle = {\r\n      background: \"#004466\",\r\n      position: \"absolute\",\r\n      height: 130,\r\n      bottom: 5\r\n    };\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\"\r\n    };\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n  }\r\n\r\n  maxDigitWarning() {\r\n    this.setState({\r\n      currentVal: \"Digit Limit Met\",\r\n      prevVal: this.state.currentVal\r\n    });\r\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal }))\r\n  }\r\n\r\n  handleEvaluate() {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      let expression = this.state.formula;\r\n      while (endsWithOperator.test(expression)) {\r\n        expression = expression.slice(0, -1);\r\n      }\r\n      expression = expression.replace(/x/g, \"*\").replace(/-/g, \"-\");\r\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula:\r\n            expression.replace(/\\*/g, \"⋅\").replace(/-/g, \"‑\") + \"=\" + answer,\r\n        prevVal: answer,\r\n        evaluated: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperators(e) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const value = e.target.value;\r\n      const {formula, prevVal, evaluated} = this.state;\r\n      this.setState({\r\n        currentVal: value, evaluated: false\r\n      });\r\n      if (evaluated) {\r\n        this.setState({formula: prevVal + value});\r\n      } else if (!endsWithOperator.test(formula)) {\r\n        this.setState({\r\n          prevVal: formula,\r\n          formula: formula + value\r\n        });\r\n      } else if(!endsWithNegativeSign.test(formula)) {\r\n        this.setState({\r\n          formula: (endsWithNegativeSign.test(formula + value) ? formula : prevVal) + value\r\n        });\r\n      } else if (value !== \"-\") {\r\n        this.setState({\r\n          formula: prevVal + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNumbers(e) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const { currentVal, formula, evaluated } = this.state;\r\n      const value = e.target.value;\r\n      this.setState({ evaluated: false });\r\n      if (currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (evaluated) {\r\n        this.setState({\r\n          currentVal: value,\r\n          formula: value !== \"0\" ? value : \"\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal:\r\n              currentVal === \"0\" || isOperator.test(currentVal)\r\n                  ? value\r\n                  : currentVal + value,\r\n          formula:\r\n              currentVal === \"0\" && value === \"0\"\r\n                  ? formula === \"\" ? value : formula\r\n                  : /([^.0-9]0|^0)$/.test(formula)\r\n                  ? formula.slice(0, -1) + value\r\n                  : formula + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: \"0.\",\r\n        formula: \"0.\",\r\n        evaluated: false\r\n      });\r\n    } else if (\r\n        !this.state.currentVal.includes(\".\") &&\r\n        !this.state.currentVal.includes(\"Limit\")\r\n    ) {\r\n      this.setState({ evaluated: false });\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (\r\n          endsWithOperator.test(this.state.formula) ||\r\n          (this.state.currentVal === \"0\" && this.state.formula === \"\")\r\n      ) {\r\n        this.setState({\r\n          currentVal: \"0.\",\r\n          formula: this.state.formula + \"0.\"\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + \".\",\r\n          formula: this.state.formula + \".\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.setState({\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n      evaluated: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <div className=\"calculator\">\r\n            <Formula formula={this.state.formula.replace(/x/g, \"⋅\")} />\r\n            <Output currentValue={this.state.currentVal} />\r\n            <Buttons\r\n                decimal={this.handleDecimal}\r\n                evaluate={this.handleEvaluate}\r\n                initialize={this.initialize}\r\n                numbers={this.handleNumbers}\r\n                operators={this.handleOperators}\r\n            />\r\n          </div>\r\n          <div className=\"author\">\r\n            {\" \"}\r\n            Coded By <br />\r\n            <a href=\"https://goo.gl/6NNLMG\" target=\"_blank\">\r\n              Sean O'Donnell\r\n            </a>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <button\r\n              className=\"jumbo\"\r\n              id=\"clear\"\r\n              onClick={this.props.initialize}\r\n              style={clearStyle}\r\n              value=\"AC\"\r\n          >\r\n            AC\r\n          </button>\r\n          <button\r\n              id=\"divide\"\r\n              onClick={this.props.operators}\r\n              style={operatorStyle}\r\n              value=\"/\"\r\n          >\r\n            /\r\n          </button>\r\n          <button\r\n              id=\"multiply\"\r\n              onClick={this.props.operators}\r\n              style={operatorStyle}\r\n              value=\"x\"\r\n          >\r\n            x\r\n          </button>\r\n          <button id=\"seven\" onClick={this.props.numbers} value=\"7\">\r\n            7\r\n          </button>\r\n          <button id=\"eight\" onClick={this.props.numbers} value=\"8\">\r\n            8\r\n          </button>\r\n          <button id=\"nine\" onClick={this.props.numbers} value=\"9\">\r\n            9\r\n          </button>\r\n          <button\r\n              id=\"subtract\"\r\n              onClick={this.props.operators}\r\n              style={operatorStyle}\r\n              value=\"‑\"\r\n          >\r\n            -\r\n          </button>\r\n          <button id=\"four\" onClick={this.props.numbers} value=\"4\">\r\n            4\r\n          </button>\r\n          <button id=\"five\" onClick={this.props.numbers} value=\"5\">\r\n            5\r\n          </button>\r\n          <button id=\"six\" onClick={this.props.numbers} value=\"6\">\r\n            6\r\n          </button>\r\n          <button\r\n              id=\"add\"\r\n              onClick={this.props.operators}\r\n              style={operatorStyle}\r\n              value=\"+\"\r\n          >\r\n            +\r\n          </button>\r\n          <button id=\"one\" onClick={this.props.numbers} value=\"1\">\r\n            1\r\n          </button>\r\n          <button id=\"two\" onClick={this.props.numbers} value=\"2\">\r\n            2\r\n          </button>\r\n          <button id=\"three\" onClick={this.props.numbers} value=\"3\">\r\n            3\r\n          </button>\r\n          <button\r\n              className=\"jumbo\"\r\n              id=\"zero\"\r\n              onClick={this.props.numbers}\r\n              value=\"0\"\r\n          >\r\n            0\r\n          </button>\r\n          <button id=\"decimal\" onClick={this.props.decimal} value=\".\">\r\n            .\r\n          </button>\r\n          <button\r\n              id=\"equals\"\r\n              onClick={this.props.evaluate}\r\n              style={equalsStyle}\r\n              value=\"=\"\r\n          >\r\n            =\r\n          </button>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends React.Component {\r\n  render() {\r\n    return (\r\n        <div className=\"outputScreen\" id=\"display\">\r\n          {this.props.currentValue}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Formula extends React.Component {\r\n  render() {\r\n    return <div className=\"formulaScreen\">{this.props.formula}</div>;\r\n  }\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Calculator />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}